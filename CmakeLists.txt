cmake_minimum_required(VERSION 3.20)
project(fox VERSION 0.1.0 LANGUAGES C CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)

set(INCLUDE_DIR  ${CMAKE_CURRENT_SOURCE_DIR}/include )
set(LIB_DIR  ${CMAKE_CURRENT_SOURCE_DIR}/lib )

set(HEADER_DIRS 
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/lib 
    ${CMAKE_CURRENT_SOURCE_DIR}/vendor/raylib/include
    ${CMAKE_CURRENT_SOURCE_DIR}/vendor/entt/single_include/entt/
    ${CMAKE_CURRENT_SOURCE_DIR}/vendor/spdlog/include/spdlog
    ${CMAKE_CURRENT_SOURCE_DIR}/vendor/raygui/src/
    ${CMAKE_CURRENT_SOURCE_DIR}/vendor/imgui/
    ${CMAKE_CURRENT_SOURCE_DIR}/vendor/imgui-impl-raylib/
    ${CMAKE_CURRENT_SOURCE_DIR}/vendor/rlImGui/
  
)


# raygui
add_library(raygui INTERFACE)
file(GLOB sources "vendor/raygui/src/raygui.h")
set(RAYGUI_HEADERS ${sources})
install(FILES
    ${RAYGUI_HEADERS} DESTINATION include
)
target_include_directories(raygui INTERFACE "vendor/raylib")

#raylib
link_directories(raylib ${CMAKE_CURRENT_SOURCE_DIR}/vendor/raylib/lib/)
file(COPY "${CMAKE_CURRENT_SOURCE_DIR}/vendor/raylib/lib/raylib.dll" DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/bin) # COPY DLL to BIN Folder

#imgui-tables
add_library(imgui_tables STATIC  ${CMAKE_CURRENT_SOURCE_DIR}/vendor/imgui/imgui_tables.cpp)
target_include_directories(imgui_tables PUBLIC ${HEADER_DIRS})

#imgui-draw
add_library(imgui_draw STATIC  ${CMAKE_CURRENT_SOURCE_DIR}/vendor/imgui/imgui_draw.cpp)
target_include_directories(imgui_draw PUBLIC ${HEADER_DIRS})

#imgui-widget
add_library(imgui_widget STATIC  ${CMAKE_CURRENT_SOURCE_DIR}/vendor/imgui/imgui_widgets.cpp)
target_include_directories(imgui_widget PUBLIC ${HEADER_DIRS})

#imgui
add_library(imgui STATIC  ${CMAKE_CURRENT_SOURCE_DIR}/vendor/imgui/imgui.cpp)
target_include_directories(imgui PUBLIC ${HEADER_DIRS})
target_link_libraries(imgui PUBLIC imgui_tables imgui_widget imgui_draw opengl32 gdi32 winmm)

#rlImGui
add_library(rlImGui STATIC ${CMAKE_CURRENT_SOURCE_DIR}/vendor/rlImGui/rlImGui.cpp)
target_include_directories(rlImGui PUBLIC ${HEADER_DIRS})
target_link_libraries(rlImGui PUBLIC imgui raylib opengl32 gdi32 winmm)

#App
add_library(app SHARED ${CMAKE_CURRENT_SOURCE_DIR}/lib/App/App.cpp)
target_include_directories(app PRIVATE ${HEADER_DIRS})
target_link_libraries(app PUBLIC rlImGui raylib raygui opengl32 gdi32 winmm)

#Main
add_executable(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}/src/main.cpp)

target_include_directories(${PROJECT_NAME} PRIVATE ${HEADER_DIRS})
target_link_libraries(${PROJECT_NAME} PUBLIC app)
